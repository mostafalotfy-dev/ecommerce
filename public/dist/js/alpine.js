/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./vendor/tightenco/ziggy/dist/index.js":
/*!**********************************************!*\
  !*** ./vendor/tightenco/ziggy/dist/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n!function (t, r) {\n  \"object\" == ( false ? 0 : _typeof(exports)) && \"undefined\" != \"object\" ? module.exports = r() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (r),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n}(this, function () {\n  function t(t, r) {\n    for (var e = 0; e < r.length; e++) {\n      var n = r[e];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, \"symbol\" == _typeof(o = function (t, r) {\n        if (\"object\" != _typeof(t) || null === t) return t;\n        var e = t[Symbol.toPrimitive];\n        if (void 0 !== e) {\n          var n = e.call(t, \"string\");\n          if (\"object\" != _typeof(n)) return n;\n          throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return String(t);\n      }(n.key)) ? o : String(o), n);\n    }\n    var o;\n  }\n  function r(r, e, n) {\n    return e && t(r.prototype, e), n && t(r, n), Object.defineProperty(r, \"prototype\", {\n      writable: !1\n    }), r;\n  }\n  function e() {\n    return e = Object.assign ? Object.assign.bind() : function (t) {\n      for (var r = 1; r < arguments.length; r++) {\n        var e = arguments[r];\n        for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n      }\n      return t;\n    }, e.apply(this, arguments);\n  }\n  function n(t) {\n    return n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n      return t.__proto__ || Object.getPrototypeOf(t);\n    }, n(t);\n  }\n  function o(t, r) {\n    return o = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, r) {\n      return t.__proto__ = r, t;\n    }, o(t, r);\n  }\n  function i(t, r, e) {\n    return i = function () {\n      if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if (\"function\" == typeof Proxy) return !0;\n      try {\n        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n      } catch (t) {\n        return !1;\n      }\n    }() ? Reflect.construct.bind() : function (t, r, e) {\n      var n = [null];\n      n.push.apply(n, r);\n      var i = new (Function.bind.apply(t, n))();\n      return e && o(i, e.prototype), i;\n    }, i.apply(null, arguments);\n  }\n  function u(t) {\n    var r = \"function\" == typeof Map ? new Map() : void 0;\n    return u = function u(t) {\n      if (null === t || -1 === Function.toString.call(t).indexOf(\"[native code]\")) return t;\n      if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n      if (void 0 !== r) {\n        if (r.has(t)) return r.get(t);\n        r.set(t, e);\n      }\n      function e() {\n        return i(t, arguments, n(this).constructor);\n      }\n      return e.prototype = Object.create(t.prototype, {\n        constructor: {\n          value: e,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), o(e, t);\n    }, u(t);\n  }\n  var f = String.prototype.replace,\n    a = /%20/g,\n    c = \"RFC3986\",\n    l = {\n      \"default\": c,\n      formatters: {\n        RFC1738: function RFC1738(t) {\n          return f.call(t, a, \"+\");\n        },\n        RFC3986: function RFC3986(t) {\n          return String(t);\n        }\n      },\n      RFC1738: \"RFC1738\",\n      RFC3986: c\n    },\n    s = Object.prototype.hasOwnProperty,\n    v = Array.isArray,\n    p = function () {\n      for (var t = [], r = 0; r < 256; ++r) t.push(\"%\" + ((r < 16 ? \"0\" : \"\") + r.toString(16)).toUpperCase());\n      return t;\n    }(),\n    y = function y(t, r) {\n      for (var e = r && r.plainObjects ? Object.create(null) : {}, n = 0; n < t.length; ++n) void 0 !== t[n] && (e[n] = t[n]);\n      return e;\n    },\n    d = {\n      arrayToObject: y,\n      assign: function assign(t, r) {\n        return Object.keys(r).reduce(function (t, e) {\n          return t[e] = r[e], t;\n        }, t);\n      },\n      combine: function combine(t, r) {\n        return [].concat(t, r);\n      },\n      compact: function compact(t) {\n        for (var r = [{\n            obj: {\n              o: t\n            },\n            prop: \"o\"\n          }], e = [], n = 0; n < r.length; ++n) for (var o = r[n], i = o.obj[o.prop], u = Object.keys(i), f = 0; f < u.length; ++f) {\n          var a = u[f],\n            c = i[a];\n          \"object\" == _typeof(c) && null !== c && -1 === e.indexOf(c) && (r.push({\n            obj: i,\n            prop: a\n          }), e.push(c));\n        }\n        return function (t) {\n          for (; t.length > 1;) {\n            var r = t.pop(),\n              e = r.obj[r.prop];\n            if (v(e)) {\n              for (var n = [], o = 0; o < e.length; ++o) void 0 !== e[o] && n.push(e[o]);\n              r.obj[r.prop] = n;\n            }\n          }\n        }(r), t;\n      },\n      decode: function decode(t, r, e) {\n        var n = t.replace(/\\+/g, \" \");\n        if (\"iso-8859-1\" === e) return n.replace(/%[0-9a-f]{2}/gi, unescape);\n        try {\n          return decodeURIComponent(n);\n        } catch (t) {\n          return n;\n        }\n      },\n      encode: function encode(t, r, e, n, o) {\n        if (0 === t.length) return t;\n        var i = t;\n        if (\"symbol\" == _typeof(t) ? i = Symbol.prototype.toString.call(t) : \"string\" != typeof t && (i = String(t)), \"iso-8859-1\" === e) return escape(i).replace(/%u[0-9a-f]{4}/gi, function (t) {\n          return \"%26%23\" + parseInt(t.slice(2), 16) + \"%3B\";\n        });\n        for (var u = \"\", f = 0; f < i.length; ++f) {\n          var a = i.charCodeAt(f);\n          45 === a || 46 === a || 95 === a || 126 === a || a >= 48 && a <= 57 || a >= 65 && a <= 90 || a >= 97 && a <= 122 || o === l.RFC1738 && (40 === a || 41 === a) ? u += i.charAt(f) : a < 128 ? u += p[a] : a < 2048 ? u += p[192 | a >> 6] + p[128 | 63 & a] : a < 55296 || a >= 57344 ? u += p[224 | a >> 12] + p[128 | a >> 6 & 63] + p[128 | 63 & a] : (a = 65536 + ((1023 & a) << 10 | 1023 & i.charCodeAt(f += 1)), u += p[240 | a >> 18] + p[128 | a >> 12 & 63] + p[128 | a >> 6 & 63] + p[128 | 63 & a]);\n        }\n        return u;\n      },\n      isBuffer: function isBuffer(t) {\n        return !(!t || \"object\" != _typeof(t) || !(t.constructor && t.constructor.isBuffer && t.constructor.isBuffer(t)));\n      },\n      isRegExp: function isRegExp(t) {\n        return \"[object RegExp]\" === Object.prototype.toString.call(t);\n      },\n      maybeMap: function maybeMap(t, r) {\n        if (v(t)) {\n          for (var e = [], n = 0; n < t.length; n += 1) e.push(r(t[n]));\n          return e;\n        }\n        return r(t);\n      },\n      merge: function t(r, e, n) {\n        if (!e) return r;\n        if (\"object\" != _typeof(e)) {\n          if (v(r)) r.push(e);else {\n            if (!r || \"object\" != _typeof(r)) return [r, e];\n            (n && (n.plainObjects || n.allowPrototypes) || !s.call(Object.prototype, e)) && (r[e] = !0);\n          }\n          return r;\n        }\n        if (!r || \"object\" != _typeof(r)) return [r].concat(e);\n        var o = r;\n        return v(r) && !v(e) && (o = y(r, n)), v(r) && v(e) ? (e.forEach(function (e, o) {\n          if (s.call(r, o)) {\n            var i = r[o];\n            i && \"object\" == _typeof(i) && e && \"object\" == _typeof(e) ? r[o] = t(i, e, n) : r.push(e);\n          } else r[o] = e;\n        }), r) : Object.keys(e).reduce(function (r, o) {\n          var i = e[o];\n          return r[o] = s.call(r, o) ? t(r[o], i, n) : i, r;\n        }, o);\n      }\n    },\n    b = Object.prototype.hasOwnProperty,\n    h = {\n      brackets: function brackets(t) {\n        return t + \"[]\";\n      },\n      comma: \"comma\",\n      indices: function indices(t, r) {\n        return t + \"[\" + r + \"]\";\n      },\n      repeat: function repeat(t) {\n        return t;\n      }\n    },\n    m = Array.isArray,\n    g = String.prototype.split,\n    j = Array.prototype.push,\n    w = function w(t, r) {\n      j.apply(t, m(r) ? r : [r]);\n    },\n    O = Date.prototype.toISOString,\n    E = l[\"default\"],\n    R = {\n      addQueryPrefix: !1,\n      allowDots: !1,\n      charset: \"utf-8\",\n      charsetSentinel: !1,\n      delimiter: \"&\",\n      encode: !0,\n      encoder: d.encode,\n      encodeValuesOnly: !1,\n      format: E,\n      formatter: l.formatters[E],\n      indices: !1,\n      serializeDate: function serializeDate(t) {\n        return O.call(t);\n      },\n      skipNulls: !1,\n      strictNullHandling: !1\n    },\n    S = function t(r, e, n, o, i, u, f, a, c, l, s, v, p, y) {\n      var b,\n        h = r;\n      if (\"function\" == typeof f ? h = f(e, h) : h instanceof Date ? h = l(h) : \"comma\" === n && m(h) && (h = d.maybeMap(h, function (t) {\n        return t instanceof Date ? l(t) : t;\n      })), null === h) {\n        if (o) return u && !p ? u(e, R.encoder, y, \"key\", s) : e;\n        h = \"\";\n      }\n      if (\"string\" == typeof (b = h) || \"number\" == typeof b || \"boolean\" == typeof b || \"symbol\" == _typeof(b) || \"bigint\" == typeof b || d.isBuffer(h)) {\n        if (u) {\n          var j = p ? e : u(e, R.encoder, y, \"key\", s);\n          if (\"comma\" === n && p) {\n            for (var O = g.call(String(h), \",\"), E = \"\", S = 0; S < O.length; ++S) E += (0 === S ? \"\" : \",\") + v(u(O[S], R.encoder, y, \"value\", s));\n            return [v(j) + \"=\" + E];\n          }\n          return [v(j) + \"=\" + v(u(h, R.encoder, y, \"value\", s))];\n        }\n        return [v(e) + \"=\" + v(String(h))];\n      }\n      var T,\n        k = [];\n      if (void 0 === h) return k;\n      if (\"comma\" === n && m(h)) T = [{\n        value: h.length > 0 ? h.join(\",\") || null : void 0\n      }];else if (m(f)) T = f;else {\n        var x = Object.keys(h);\n        T = a ? x.sort(a) : x;\n      }\n      for (var C = 0; C < T.length; ++C) {\n        var N = T[C],\n          D = \"object\" == _typeof(N) && void 0 !== N.value ? N.value : h[N];\n        if (!i || null !== D) {\n          var F = m(h) ? \"function\" == typeof n ? n(e, N) : e : e + (c ? \".\" + N : \"[\" + N + \"]\");\n          w(k, t(D, F, n, o, i, u, f, a, c, l, s, v, p, y));\n        }\n      }\n      return k;\n    },\n    T = Object.prototype.hasOwnProperty,\n    k = Array.isArray,\n    x = {\n      allowDots: !1,\n      allowPrototypes: !1,\n      arrayLimit: 20,\n      charset: \"utf-8\",\n      charsetSentinel: !1,\n      comma: !1,\n      decoder: d.decode,\n      delimiter: \"&\",\n      depth: 5,\n      ignoreQueryPrefix: !1,\n      interpretNumericEntities: !1,\n      parameterLimit: 1e3,\n      parseArrays: !0,\n      plainObjects: !1,\n      strictNullHandling: !1\n    },\n    C = function C(t) {\n      return t.replace(/&#(\\d+);/g, function (t, r) {\n        return String.fromCharCode(parseInt(r, 10));\n      });\n    },\n    N = function N(t, r) {\n      return t && \"string\" == typeof t && r.comma && t.indexOf(\",\") > -1 ? t.split(\",\") : t;\n    },\n    D = function D(t, r, e, n) {\n      if (t) {\n        var o = e.allowDots ? t.replace(/\\.([^.[]+)/g, \"[$1]\") : t,\n          i = /(\\[[^[\\]]*])/g,\n          u = e.depth > 0 && /(\\[[^[\\]]*])/.exec(o),\n          f = u ? o.slice(0, u.index) : o,\n          a = [];\n        if (f) {\n          if (!e.plainObjects && T.call(Object.prototype, f) && !e.allowPrototypes) return;\n          a.push(f);\n        }\n        for (var c = 0; e.depth > 0 && null !== (u = i.exec(o)) && c < e.depth;) {\n          if (c += 1, !e.plainObjects && T.call(Object.prototype, u[1].slice(1, -1)) && !e.allowPrototypes) return;\n          a.push(u[1]);\n        }\n        return u && a.push(\"[\" + o.slice(u.index) + \"]\"), function (t, r, e, n) {\n          for (var o = n ? r : N(r, e), i = t.length - 1; i >= 0; --i) {\n            var u,\n              f = t[i];\n            if (\"[]\" === f && e.parseArrays) u = [].concat(o);else {\n              u = e.plainObjects ? Object.create(null) : {};\n              var a = \"[\" === f.charAt(0) && \"]\" === f.charAt(f.length - 1) ? f.slice(1, -1) : f,\n                c = parseInt(a, 10);\n              e.parseArrays || \"\" !== a ? !isNaN(c) && f !== a && String(c) === a && c >= 0 && e.parseArrays && c <= e.arrayLimit ? (u = [])[c] = o : \"__proto__\" !== a && (u[a] = o) : u = {\n                0: o\n              };\n            }\n            o = u;\n          }\n          return o;\n        }(a, r, e, n);\n      }\n    },\n    F = function F(t, r) {\n      var e = function (t) {\n        if (!t) return x;\n        if (null != t.decoder && \"function\" != typeof t.decoder) throw new TypeError(\"Decoder has to be a function.\");\n        if (void 0 !== t.charset && \"utf-8\" !== t.charset && \"iso-8859-1\" !== t.charset) throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n        return {\n          allowDots: void 0 === t.allowDots ? x.allowDots : !!t.allowDots,\n          allowPrototypes: \"boolean\" == typeof t.allowPrototypes ? t.allowPrototypes : x.allowPrototypes,\n          arrayLimit: \"number\" == typeof t.arrayLimit ? t.arrayLimit : x.arrayLimit,\n          charset: void 0 === t.charset ? x.charset : t.charset,\n          charsetSentinel: \"boolean\" == typeof t.charsetSentinel ? t.charsetSentinel : x.charsetSentinel,\n          comma: \"boolean\" == typeof t.comma ? t.comma : x.comma,\n          decoder: \"function\" == typeof t.decoder ? t.decoder : x.decoder,\n          delimiter: \"string\" == typeof t.delimiter || d.isRegExp(t.delimiter) ? t.delimiter : x.delimiter,\n          depth: \"number\" == typeof t.depth || !1 === t.depth ? +t.depth : x.depth,\n          ignoreQueryPrefix: !0 === t.ignoreQueryPrefix,\n          interpretNumericEntities: \"boolean\" == typeof t.interpretNumericEntities ? t.interpretNumericEntities : x.interpretNumericEntities,\n          parameterLimit: \"number\" == typeof t.parameterLimit ? t.parameterLimit : x.parameterLimit,\n          parseArrays: !1 !== t.parseArrays,\n          plainObjects: \"boolean\" == typeof t.plainObjects ? t.plainObjects : x.plainObjects,\n          strictNullHandling: \"boolean\" == typeof t.strictNullHandling ? t.strictNullHandling : x.strictNullHandling\n        };\n      }(r);\n      if (\"\" === t || null == t) return e.plainObjects ? Object.create(null) : {};\n      for (var n = \"string\" == typeof t ? function (t, r) {\n          var e,\n            n = {},\n            o = (r.ignoreQueryPrefix ? t.replace(/^\\?/, \"\") : t).split(r.delimiter, Infinity === r.parameterLimit ? void 0 : r.parameterLimit),\n            i = -1,\n            u = r.charset;\n          if (r.charsetSentinel) for (e = 0; e < o.length; ++e) 0 === o[e].indexOf(\"utf8=\") && (\"utf8=%E2%9C%93\" === o[e] ? u = \"utf-8\" : \"utf8=%26%2310003%3B\" === o[e] && (u = \"iso-8859-1\"), i = e, e = o.length);\n          for (e = 0; e < o.length; ++e) if (e !== i) {\n            var f,\n              a,\n              c = o[e],\n              l = c.indexOf(\"]=\"),\n              s = -1 === l ? c.indexOf(\"=\") : l + 1;\n            -1 === s ? (f = r.decoder(c, x.decoder, u, \"key\"), a = r.strictNullHandling ? null : \"\") : (f = r.decoder(c.slice(0, s), x.decoder, u, \"key\"), a = d.maybeMap(N(c.slice(s + 1), r), function (t) {\n              return r.decoder(t, x.decoder, u, \"value\");\n            })), a && r.interpretNumericEntities && \"iso-8859-1\" === u && (a = C(a)), c.indexOf(\"[]=\") > -1 && (a = k(a) ? [a] : a), n[f] = T.call(n, f) ? d.combine(n[f], a) : a;\n          }\n          return n;\n        }(t, e) : t, o = e.plainObjects ? Object.create(null) : {}, i = Object.keys(n), u = 0; u < i.length; ++u) {\n        var f = i[u],\n          a = D(f, n[f], e, \"string\" == typeof t);\n        o = d.merge(o, a, e);\n      }\n      return d.compact(o);\n    },\n    P = /*#__PURE__*/function () {\n      function t(t, r, e) {\n        var n, o;\n        this.name = t, this.definition = r, this.bindings = null != (n = r.bindings) ? n : {}, this.wheres = null != (o = r.wheres) ? o : {}, this.config = e;\n      }\n      var e = t.prototype;\n      return e.matchesUrl = function (t) {\n        var r = this;\n        if (!this.definition.methods.includes(\"GET\")) return !1;\n        var e = this.template.replace(/(\\/?){([^}?]*)(\\??)}/g, function (t, e, n, o) {\n            var i,\n              u = \"(?<\" + n + \">\" + ((null == (i = r.wheres[n]) ? void 0 : i.replace(/(^\\^)|(\\$$)/g, \"\")) || \"[^/?]+\") + \")\";\n            return o ? \"(\" + e + u + \")?\" : \"\" + e + u;\n          }).replace(/^\\w+:\\/\\//, \"\"),\n          n = t.replace(/^\\w+:\\/\\//, \"\").split(\"?\"),\n          o = n[0],\n          i = n[1],\n          u = new RegExp(\"^\" + e + \"/?$\").exec(o);\n        if (u) {\n          for (var f in u.groups) u.groups[f] = \"string\" == typeof u.groups[f] ? decodeURIComponent(u.groups[f]) : u.groups[f];\n          return {\n            params: u.groups,\n            query: F(i)\n          };\n        }\n        return !1;\n      }, e.compile = function (t) {\n        var r = this,\n          e = this.parameterSegments;\n        return e.length ? this.template.replace(/{([^}?]+)(\\??)}/g, function (n, o, i) {\n          var u;\n          if (!i && [null, void 0].includes(t[o])) throw new Error(\"Ziggy error: '\" + o + \"' parameter is required for route '\" + r.name + \"'.\");\n          if (r.wheres[o]) {\n            var f, a;\n            if (!new RegExp(\"^\" + (i ? \"(\" + r.wheres[o] + \")?\" : r.wheres[o]) + \"$\").test(null != (f = t[o]) ? f : \"\")) throw new Error(\"Ziggy error: '\" + o + \"' parameter does not match required format '\" + r.wheres[o] + \"' for route '\" + r.name + \"'.\");\n            if (e[e.length - 1].name === o) return encodeURIComponent(null != (a = t[o]) ? a : \"\").replace(/%2F/g, \"/\");\n          }\n          return encodeURIComponent(null != (u = t[o]) ? u : \"\");\n        }).replace(this.origin + \"//\", this.origin + \"/\").replace(/\\/+$/, \"\") : this.template;\n      }, r(t, [{\n        key: \"template\",\n        get: function get() {\n          return (this.origin + \"/\" + this.definition.uri).replace(/\\/+$/, \"\");\n        }\n      }, {\n        key: \"origin\",\n        get: function get() {\n          return this.config.absolute ? this.definition.domain ? \"\" + this.config.url.match(/^\\w+:\\/\\//)[0] + this.definition.domain + (this.config.port ? \":\" + this.config.port : \"\") : this.config.url : \"\";\n        }\n      }, {\n        key: \"parameterSegments\",\n        get: function get() {\n          var t, r;\n          return null != (t = null == (r = this.template.match(/{[^}?]+\\??}/g)) ? void 0 : r.map(function (t) {\n            return {\n              name: t.replace(/{|\\??}/g, \"\"),\n              required: !/\\?}$/.test(t)\n            };\n          })) ? t : [];\n        }\n      }]), t;\n    }(),\n    $ = /*#__PURE__*/function (t) {\n      var n, i;\n      function u(r, n, o, i) {\n        var u;\n        if (void 0 === o && (o = !0), (u = t.call(this) || this).t = null != i ? i : \"undefined\" != typeof Ziggy ? Ziggy : null == globalThis ? void 0 : globalThis.Ziggy, u.t = e({}, u.t, {\n          absolute: o\n        }), r) {\n          if (!u.t.routes[r]) throw new Error(\"Ziggy error: route '\" + r + \"' is not in the route list.\");\n          u.i = new P(r, u.t.routes[r], u.t), u.u = u.l(n);\n        }\n        return u;\n      }\n      i = t, (n = u).prototype = Object.create(i.prototype), n.prototype.constructor = n, o(n, i);\n      var f = u.prototype;\n      return f.toString = function () {\n        var t = this,\n          r = Object.keys(this.u).filter(function (r) {\n            return !t.i.parameterSegments.some(function (t) {\n              return t.name === r;\n            });\n          }).filter(function (t) {\n            return \"_query\" !== t;\n          }).reduce(function (r, n) {\n            var o;\n            return e({}, r, ((o = {})[n] = t.u[n], o));\n          }, {});\n        return this.i.compile(this.u) + function (t, r) {\n          var e,\n            n = t,\n            o = function (t) {\n              if (!t) return R;\n              if (null != t.encoder && \"function\" != typeof t.encoder) throw new TypeError(\"Encoder has to be a function.\");\n              var r = t.charset || R.charset;\n              if (void 0 !== t.charset && \"utf-8\" !== t.charset && \"iso-8859-1\" !== t.charset) throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n              var e = l[\"default\"];\n              if (void 0 !== t.format) {\n                if (!b.call(l.formatters, t.format)) throw new TypeError(\"Unknown format option provided.\");\n                e = t.format;\n              }\n              var n = l.formatters[e],\n                o = R.filter;\n              return (\"function\" == typeof t.filter || m(t.filter)) && (o = t.filter), {\n                addQueryPrefix: \"boolean\" == typeof t.addQueryPrefix ? t.addQueryPrefix : R.addQueryPrefix,\n                allowDots: void 0 === t.allowDots ? R.allowDots : !!t.allowDots,\n                charset: r,\n                charsetSentinel: \"boolean\" == typeof t.charsetSentinel ? t.charsetSentinel : R.charsetSentinel,\n                delimiter: void 0 === t.delimiter ? R.delimiter : t.delimiter,\n                encode: \"boolean\" == typeof t.encode ? t.encode : R.encode,\n                encoder: \"function\" == typeof t.encoder ? t.encoder : R.encoder,\n                encodeValuesOnly: \"boolean\" == typeof t.encodeValuesOnly ? t.encodeValuesOnly : R.encodeValuesOnly,\n                filter: o,\n                format: e,\n                formatter: n,\n                serializeDate: \"function\" == typeof t.serializeDate ? t.serializeDate : R.serializeDate,\n                skipNulls: \"boolean\" == typeof t.skipNulls ? t.skipNulls : R.skipNulls,\n                sort: \"function\" == typeof t.sort ? t.sort : null,\n                strictNullHandling: \"boolean\" == typeof t.strictNullHandling ? t.strictNullHandling : R.strictNullHandling\n              };\n            }(r);\n          \"function\" == typeof o.filter ? n = (0, o.filter)(\"\", n) : m(o.filter) && (e = o.filter);\n          var i = [];\n          if (\"object\" != _typeof(n) || null === n) return \"\";\n          var u = h[r && r.arrayFormat in h ? r.arrayFormat : r && \"indices\" in r ? r.indices ? \"indices\" : \"repeat\" : \"indices\"];\n          e || (e = Object.keys(n)), o.sort && e.sort(o.sort);\n          for (var f = 0; f < e.length; ++f) {\n            var a = e[f];\n            o.skipNulls && null === n[a] || w(i, S(n[a], a, u, o.strictNullHandling, o.skipNulls, o.encode ? o.encoder : null, o.filter, o.sort, o.allowDots, o.serializeDate, o.format, o.formatter, o.encodeValuesOnly, o.charset));\n          }\n          var c = i.join(o.delimiter),\n            s = !0 === o.addQueryPrefix ? \"?\" : \"\";\n          return o.charsetSentinel && (s += \"iso-8859-1\" === o.charset ? \"utf8=%26%2310003%3B&\" : \"utf8=%E2%9C%93&\"), c.length > 0 ? s + c : \"\";\n        }(e({}, r, this.u._query), {\n          addQueryPrefix: !0,\n          arrayFormat: \"indices\",\n          encodeValuesOnly: !0,\n          skipNulls: !0,\n          encoder: function encoder(t, r) {\n            return \"boolean\" == typeof t ? Number(t) : r(t);\n          }\n        });\n      }, f.v = function (t) {\n        var r = this;\n        t ? this.t.absolute && t.startsWith(\"/\") && (t = this.p().host + t) : t = this.h();\n        var n = {},\n          o = Object.entries(this.t.routes).find(function (e) {\n            return n = new P(e[0], e[1], r.t).matchesUrl(t);\n          }) || [void 0, void 0];\n        return e({\n          name: o[0]\n        }, n, {\n          route: o[1]\n        });\n      }, f.h = function () {\n        var t = this.p(),\n          r = t.pathname,\n          e = t.search;\n        return (this.t.absolute ? t.host + r : r.replace(this.t.url.replace(/^\\w*:\\/\\/[^/]+/, \"\"), \"\").replace(/^\\/+/, \"/\")) + e;\n      }, f.current = function (t, r) {\n        var n = this.v(),\n          o = n.name,\n          i = n.params,\n          u = n.query,\n          f = n.route;\n        if (!t) return o;\n        var a = new RegExp(\"^\" + t.replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\") + \"$\").test(o);\n        if ([null, void 0].includes(r) || !a) return a;\n        var c = new P(o, f, this.t);\n        r = this.l(r, c);\n        var l = e({}, i, u);\n        return !(!Object.values(r).every(function (t) {\n          return !t;\n        }) || Object.values(l).some(function (t) {\n          return void 0 !== t;\n        })) || Object.entries(r).every(function (t) {\n          return l[t[0]] == t[1];\n        });\n      }, f.p = function () {\n        var t,\n          r,\n          e,\n          n,\n          o,\n          i,\n          u = \"undefined\" != typeof window ? window.location : {},\n          f = u.host,\n          a = u.pathname,\n          c = u.search;\n        return {\n          host: null != (t = null == (r = this.t.location) ? void 0 : r.host) ? t : void 0 === f ? \"\" : f,\n          pathname: null != (e = null == (n = this.t.location) ? void 0 : n.pathname) ? e : void 0 === a ? \"\" : a,\n          search: null != (o = null == (i = this.t.location) ? void 0 : i.search) ? o : void 0 === c ? \"\" : c\n        };\n      }, f.has = function (t) {\n        return Object.keys(this.t.routes).includes(t);\n      }, f.l = function (t, r) {\n        var n = this;\n        void 0 === t && (t = {}), void 0 === r && (r = this.i), null != t || (t = {}), t = [\"string\", \"number\"].includes(_typeof(t)) ? [t] : t;\n        var o = r.parameterSegments.filter(function (t) {\n          return !n.t.defaults[t.name];\n        });\n        if (Array.isArray(t)) t = t.reduce(function (t, r, n) {\n          var i, u;\n          return e({}, t, o[n] ? ((i = {})[o[n].name] = r, i) : \"object\" == _typeof(r) ? r : ((u = {})[r] = \"\", u));\n        }, {});else if (1 === o.length && !t[o[0].name] && (t.hasOwnProperty(Object.values(r.bindings)[0]) || t.hasOwnProperty(\"id\"))) {\n          var i;\n          (i = {})[o[0].name] = t, t = i;\n        }\n        return e({}, this.m(r), this.g(t, r));\n      }, f.m = function (t) {\n        var r = this;\n        return t.parameterSegments.filter(function (t) {\n          return r.t.defaults[t.name];\n        }).reduce(function (t, n, o) {\n          var i,\n            u = n.name;\n          return e({}, t, ((i = {})[u] = r.t.defaults[u], i));\n        }, {});\n      }, f.g = function (t, r) {\n        var n = r.bindings,\n          o = r.parameterSegments;\n        return Object.entries(t).reduce(function (t, r) {\n          var i,\n            u,\n            f = r[0],\n            a = r[1];\n          if (!a || \"object\" != _typeof(a) || Array.isArray(a) || !o.some(function (t) {\n            return t.name === f;\n          })) return e({}, t, ((u = {})[f] = a, u));\n          if (!a.hasOwnProperty(n[f])) {\n            if (!a.hasOwnProperty(\"id\")) throw new Error(\"Ziggy error: object passed as '\" + f + \"' parameter is missing route model binding key '\" + n[f] + \"'.\");\n            n[f] = \"id\";\n          }\n          return e({}, t, ((i = {})[f] = a[n[f]], i));\n        }, {});\n      }, f.valueOf = function () {\n        return this.toString();\n      }, f.check = function (t) {\n        return this.has(t);\n      }, r(u, [{\n        key: \"params\",\n        get: function get() {\n          var t = this.v();\n          return e({}, t.params, t.query);\n        }\n      }]), u;\n    }( /*#__PURE__*/u(String));\n  return function (t, r, e, n) {\n    var o = new $(t, r, e, n);\n    return t ? o.toString() : o;\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./vendor/tightenco/ziggy/dist/index.js\n");

/***/ }),

/***/ "./resources/js/alpine.js":
/*!********************************!*\
  !*** ./resources/js/alpine.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ziggy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ziggy */ \"./vendor/tightenco/ziggy/dist/index.js\");\n/* harmony import */ var _ziggy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ziggy.js */ \"./resources/js/ziggy.js\");\n\n\ndocument.addEventListener(\"alpine:init\", function () {\n  Alpine.store(\"search\", {\n    searchInput: \"\",\n    result: [],\n    loading: false,\n    page_number: 1,\n    value: \"\",\n    controller: null,\n    clear: function clear() {\n      if (this.searchInput.length === 0) {\n        this.get();\n      }\n    },\n    send: function send(id) {\n      var formData = new FormData();\n      formData.append(\"key\", id);\n      formData.append(\"value\", this.value);\n      fetch(\"http://\" + location.host + \"/api/ajax/language\", {\n        method: \"post\",\n        body: formData,\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      });\n    },\n    get: function get() {\n      var _this$controller,\n        _this = this;\n      fetch(\"http://\".concat(location.host, \"/api/ajax/language/\").concat(encodeURIComponent(this.searchInput.replace(/\\//g, \"-\")), \"?page= \").concat(this.page_number), {\n        signal: (_this$controller = this.controller) === null || _this$controller === void 0 ? void 0 : _this$controller.signal\n      }).then(function (r) {\n        return r.json();\n      }).then(function (_ref) {\n        var data = _ref.data;\n        _this.result = data;\n        if (_this.controller) {\n          _this.controller.abort();\n        }\n        _this.controller = new AbortController();\n      })[\"catch\"](function (e) {\n        console.log(e.message);\n      })[\"finally\"](function () {\n        _this.loading = false;\n      });\n    },\n    \"delete\": function _delete(id) {\n      var _this2 = this;\n      fetch(location.protocol + \"/api/ajax/language/\" + id, {\n        method: \"delete\"\n      }).then(function (r) {\n        return r.json();\n      }).then(function (r) {\n        return _this2.result = r.data.data;\n      });\n    },\n    nextPage: function nextPage() {\n      this.page_number++;\n      if (this.page_number > this.length) this.page_number = this.length;\n      this.loading = true;\n      this.get();\n    },\n    prevPage: function prevPage() {\n      this.page_number--;\n      if (this.page_number < 1) this.page_number = 1;\n      this.loading = true;\n      this.get();\n    }\n  });\n  Alpine.data(\"sweetalert\", function () {\n    return {\n      show: function show(obj) {\n        Swal.fire({\n          title: obj.title,\n          text: obj.text,\n          icon: obj.icon,\n          confirmButtonText: obj.confirmButtonText\n        });\n      }\n    };\n  });\n  Alpine.store(\"permission\", {\n    permissions: [],\n    searchInput: \"\",\n    currentPage: 1,\n    errors: null,\n    role_name_en: \"\",\n    role_name_ar: \"\",\n    paginate: function paginate() {\n      var _this3 = this;\n      fetch(\"http://\".concat(location.host, \"/api/ajax/permissions/\").concat(encodeURIComponent(this.searchInput), \"?page=\").concat(this.currentPage), {\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (_ref2) {\n        var permissions = _ref2.permissions;\n        _this3.permissions = permissions;\n      });\n    },\n    add: function add() {\n      var _this4 = this;\n      var formData = new FormData(document.getElementById(\"role-form\"));\n      fetch(\"http://\".concat(location.host, \"/api/ajax/permissions\"), {\n        method: \"post\",\n        body: formData,\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (r) {\n        if (r.hasOwnProperty(\"errors\")) {\n          _this4.errors = r.message;\n        } else if (r.hasOwnProperty(\"redirect_to\")) {\n          location = r.redirect_to;\n        } else {\n          console.log(r);\n        }\n      });\n    },\n    update: function update() {\n      var form = document.getElementById(\"role-form\");\n      fetch(form.getAttribute(\"action\"), {\n        method: \"put\",\n        body: new FormData(form),\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (r) {\n        console.log(r);\n      });\n    }\n  });\n  Alpine.data(\"cod\", function () {\n    return {\n      update: function update(id, status, name) {\n        fetch(\"http://\".concat(location.host, \"/api/ajax/cod/\").concat(status, \"/\").concat(id)).then(function () {\n          return location.reload();\n        });\n      }\n    };\n  });\n  Alpine.data(\"status\", function () {\n    return {\n      update: function update(id, status, name) {\n        var formData = new FormData();\n        formData.append(\"id\", id);\n        formData.append(\"status\", status);\n        formData.append(\"_method\", \"put\");\n        fetch(\"http://\".concat(location.host, \"/api/ajax/update/\").concat(name, \"/status\"), {\n          method: \"post\",\n          body: formData,\n          headers: {\n            \"Accept\": \"application/json\"\n          }\n        }).then(function (r) {\n          return location.reload();\n        });\n      }\n    };\n  });\n  Alpine.data(\"crud\", function () {\n    return {\n      message: null,\n      currentPage: 1,\n      errors: null,\n      send: function send(id) {\n        var _this5 = this;\n        var isModal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        this.errors = null;\n        var form = document.getElementById(id);\n        fetch(form.action, {\n          method: form.getAttribute(\"method\"),\n          body: new FormData(form),\n          headers: {\n            \"Accept\": \"application/json\"\n          }\n        }).then(function (r) {\n          return r.json();\n        }).then(function (r) {\n          if (r.hasOwnProperty(\"errors\")) {\n            _this5.message = r.message;\n            _this5.errors = r.errors;\n          } else if (r.hasOwnProperty(\"redirect_to\") && !isModal) {\n            Swal.fire(r.message).then(function () {\n              location = r.redirect_to;\n            });\n          } else if (r.hasOwnProperty(\"message\")) {\n            Swal.fire(r.message);\n            if (isModal) {\n              document.dispatchEvent(new MouseEvent(\"click\"));\n            }\n          }\n        });\n      }\n    };\n  });\n  Alpine.data(\"gallery\", function () {\n    return {\n      images: [],\n      pageNumber: 1,\n      enabled: false,\n      init: function init() {\n        this.get();\n      },\n      get: function get() {\n        var _this6 = this;\n        fetch(\"\".concat(location.protocol, \"/api/images?page=\").concat(this.pageNumber), {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          return _this6.images = data.results;\n        });\n      },\n      update: function update(target) {\n        var _this7 = this;\n        var form = new FormData(target);\n        fetch(target.getAttribute(\"action\"), {\n          body: form,\n          method: target.getAttribute(\"method\")\n        }).then(function () {\n          return _this7.get();\n        });\n      },\n      next: function next() {\n        this.pageNumber++;\n        if (this.pageNumber > this.images.length) {\n          this.pageNumber = this.images.length;\n        }\n        this.get();\n      },\n      prev: function prev() {\n        this.pageNumber--;\n        if (this.pageNumber < 1) {\n          this.pageNumber = 1;\n        }\n        this.get();\n      }\n    };\n  });\n  Alpine.data(\"address\", function () {\n    return {\n      addresses: [],\n      index: 1,\n      \"delete\": function _delete(id) {\n        this.addresses = this.addresses.filter(function (address) {\n          return id === address.id;\n        });\n      },\n      add: function add() {\n        this.addresses.push({\n          id: this.index++\n        });\n        $(this.$refs.country).select2();\n      }\n    };\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/alpine.js\n");

/***/ }),

/***/ "./resources/js/ziggy.js":
/*!*******************************!*\
  !*** ./resources/js/ziggy.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ziggy: () => (/* binding */ Ziggy)\n/* harmony export */ });\nvar Ziggy = {\n  \"url\": \"http:\\/\\/localhost\",\n  \"port\": null,\n  \"defaults\": {},\n  \"routes\": {\n    \"sanctum.csrf-cookie\": {\n      \"uri\": \"sanctum\\/csrf-cookie\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"ignition.healthCheck\": {\n      \"uri\": \"_ignition\\/health-check\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"ignition.executeSolution\": {\n      \"uri\": \"_ignition\\/execute-solution\",\n      \"methods\": [\"POST\"]\n    },\n    \"ignition.updateConfig\": {\n      \"uri\": \"_ignition\\/update-config\",\n      \"methods\": [\"POST\"]\n    },\n    \"category.get\": {\n      \"uri\": \"api\\/ajax\\/categories\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"update_role\": {\n      \"uri\": \"api\\/ajax\\/roles\\/{role}\",\n      \"methods\": [\"PUT\"]\n    },\n    \"roles.get\": {\n      \"uri\": \"api\\/ajax\\/roles\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"branches.get\": {\n      \"uri\": \"api\\/ajax\\/branches\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"brands.get\": {\n      \"uri\": \"api\\/ajax\\/brands\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"images.index\": {\n      \"uri\": \"api\\/images\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"images.create\": {\n      \"uri\": \"api\\/images\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"images.store\": {\n      \"uri\": \"api\\/images\",\n      \"methods\": [\"POST\"]\n    },\n    \"images.show\": {\n      \"uri\": \"api\\/images\\/{image}\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"images.edit\": {\n      \"uri\": \"api\\/images\\/{image}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"images.update\": {\n      \"uri\": \"api\\/images\\/{image}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"images.destroy\": {\n      \"uri\": \"api\\/images\\/{image}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"image\": \"id\"\n      }\n    },\n    \"login\": {\n      \"uri\": \"login\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"logout\": {\n      \"uri\": \"logout\",\n      \"methods\": [\"POST\"]\n    },\n    \"register\": {\n      \"uri\": \"register\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"password.request\": {\n      \"uri\": \"password\\/reset\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"password.email\": {\n      \"uri\": \"password\\/email\",\n      \"methods\": [\"POST\"]\n    },\n    \"password.reset\": {\n      \"uri\": \"password\\/reset\\/{token}\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"password.update\": {\n      \"uri\": \"password\\/reset\",\n      \"methods\": [\"POST\"]\n    },\n    \"password.confirm\": {\n      \"uri\": \"password\\/confirm\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"home\": {\n      \"uri\": \"home\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"roles.index\": {\n      \"uri\": \"roles\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"roles.create\": {\n      \"uri\": \"roles\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"roles.store\": {\n      \"uri\": \"roles\",\n      \"methods\": [\"POST\"]\n    },\n    \"roles.show\": {\n      \"uri\": \"roles\\/{role}\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"role\": \"id\"\n      }\n    },\n    \"roles.edit\": {\n      \"uri\": \"roles\\/{role}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"role\": \"id\"\n      }\n    },\n    \"roles.update\": {\n      \"uri\": \"roles\\/{role}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"roles.destroy\": {\n      \"uri\": \"roles\\/{role}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"role\": \"id\"\n      }\n    },\n    \"category.index\": {\n      \"uri\": \"category\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"category.create\": {\n      \"uri\": \"category\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"category.store\": {\n      \"uri\": \"category\",\n      \"methods\": [\"POST\"]\n    },\n    \"category.show\": {\n      \"uri\": \"category\\/{category}\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"category\": \"id\"\n      }\n    },\n    \"category.edit\": {\n      \"uri\": \"category\\/{category}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"category\": \"id\"\n      }\n    },\n    \"category.update\": {\n      \"uri\": \"category\\/{category}\",\n      \"methods\": [\"PUT\", \"PATCH\"],\n      \"bindings\": {\n        \"category\": \"id\"\n      }\n    },\n    \"category.destroy\": {\n      \"uri\": \"category\\/{category}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"category\": \"id\"\n      }\n    },\n    \"language.index\": {\n      \"uri\": \"language\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"admins.index\": {\n      \"uri\": \"admins\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"admins.create\": {\n      \"uri\": \"admins\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"admins.store\": {\n      \"uri\": \"admins\",\n      \"methods\": [\"POST\"]\n    },\n    \"admins.show\": {\n      \"uri\": \"admins\\/{admin}\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"admin\": \"id\"\n      }\n    },\n    \"admins.edit\": {\n      \"uri\": \"admins\\/{admin}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"admin\": \"id\"\n      }\n    },\n    \"admins.update\": {\n      \"uri\": \"admins\\/{admin}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"admins.destroy\": {\n      \"uri\": \"admins\\/{admin}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"admin\": \"id\"\n      }\n    },\n    \"branches.index\": {\n      \"uri\": \"branches\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"branches.create\": {\n      \"uri\": \"branches\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"branches.store\": {\n      \"uri\": \"branches\",\n      \"methods\": [\"POST\"]\n    },\n    \"branches.show\": {\n      \"uri\": \"branches\\/{branch}\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"branch\": \"id\"\n      }\n    },\n    \"branches.edit\": {\n      \"uri\": \"branches\\/{branch}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"branch\": \"id\"\n      }\n    },\n    \"branches.update\": {\n      \"uri\": \"branches\\/{branch}\",\n      \"methods\": [\"PUT\", \"PATCH\"],\n      \"bindings\": {\n        \"branch\": \"id\"\n      }\n    },\n    \"branches.destroy\": {\n      \"uri\": \"branches\\/{branch}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"branch\": \"id\"\n      }\n    },\n    \"customers.index\": {\n      \"uri\": \"customers\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"customers.create\": {\n      \"uri\": \"customers\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"customers.store\": {\n      \"uri\": \"customers\",\n      \"methods\": [\"POST\"]\n    },\n    \"customers.show\": {\n      \"uri\": \"customers\\/{customer}\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"customers.edit\": {\n      \"uri\": \"customers\\/{customer}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"customers.update\": {\n      \"uri\": \"customers\\/{customer}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"customers.destroy\": {\n      \"uri\": \"customers\\/{customer}\",\n      \"methods\": [\"DELETE\"]\n    },\n    \"brands.index\": {\n      \"uri\": \"brands\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"brands.create\": {\n      \"uri\": \"brands\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"brands.store\": {\n      \"uri\": \"brands\",\n      \"methods\": [\"POST\"]\n    },\n    \"brands.edit\": {\n      \"uri\": \"brands\\/{brand}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"],\n      \"bindings\": {\n        \"brand\": \"id\"\n      }\n    },\n    \"brands.update\": {\n      \"uri\": \"brands\\/{brand}\",\n      \"methods\": [\"PUT\", \"PATCH\"],\n      \"bindings\": {\n        \"brand\": \"id\"\n      }\n    },\n    \"brands.destroy\": {\n      \"uri\": \"brands\\/{brand}\",\n      \"methods\": [\"DELETE\"],\n      \"bindings\": {\n        \"brand\": \"id\"\n      }\n    },\n    \"products.index\": {\n      \"uri\": \"products\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"products.create\": {\n      \"uri\": \"products\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"products.store\": {\n      \"uri\": \"products\",\n      \"methods\": [\"POST\"]\n    },\n    \"products.show\": {\n      \"uri\": \"products\\/{product}\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"products.edit\": {\n      \"uri\": \"products\\/{product}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"products.update\": {\n      \"uri\": \"products\\/{product}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"products.destroy\": {\n      \"uri\": \"products\\/{product}\",\n      \"methods\": [\"DELETE\"]\n    },\n    \"files.index\": {\n      \"uri\": \"files\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"files.create\": {\n      \"uri\": \"files\\/create\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"files.store\": {\n      \"uri\": \"files\",\n      \"methods\": [\"POST\"]\n    },\n    \"files.show\": {\n      \"uri\": \"files\\/{file}\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"files.edit\": {\n      \"uri\": \"files\\/{file}\\/edit\",\n      \"methods\": [\"GET\", \"HEAD\"]\n    },\n    \"files.update\": {\n      \"uri\": \"files\\/{file}\",\n      \"methods\": [\"PUT\", \"PATCH\"]\n    },\n    \"files.destroy\": {\n      \"uri\": \"files\\/{file}\",\n      \"methods\": [\"DELETE\"]\n    }\n  }\n};\nif (typeof window !== 'undefined' && typeof window.Ziggy !== 'undefined') {\n  Object.assign(Ziggy.routes, window.Ziggy.routes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ziggy.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/alpine.js");
/******/ 	
/******/ })()
;